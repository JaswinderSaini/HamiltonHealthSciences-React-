{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\mystuff\\\\hello-world\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './App.css';\nimport data from \"./data.json\";\nimport hospital from \"./images/hospital.png\";\nimport footer2 from \"./images/footer2.png\"; //import {css} from \"emotion\";\n\n/**\n * This function is creating webpage(form, table, etc.) and handles the data being entered and displayed\n * \n * @returns The Main Content of the Page\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // to store the data from json file\n  const [patientInfo, setPatientInfo] = useState(data); // to store data from form \n\n  const [addformData, setaddFormData] = useState({\n    firstName: '',\n    lastName: '',\n    dateOfBirth: '',\n    healthCard: '',\n    gender: 'Male'\n  }); // to use as the warning message\n\n  const [msg, setMsg] = useState({\n    message: ''\n  });\n  /** \n   * It updates the addformData according to FirstName, LastName, DateOfBirth and Gender field input\n  */\n\n  const handleForm = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newFormData = { ...addformData\n    }; // if the entered data is coming from DateOfBirth\n\n    if (fieldName === \"dateOfBirth\") {\n      let date = new Date(fieldValue);\n      let current = new Date();\n      let currentTime = new Date(current.getFullYear(), current.getMonth(), current.getDate()); // checking if the entered date is not a future date\n\n      if (date < currentTime) {\n        newFormData[fieldName] = fieldValue;\n        setaddFormData(newFormData);\n        msg.message = \"\";\n      } else {\n        newFormData[fieldName] = \"\";\n        setaddFormData(newFormData);\n        setMsg({\n          message: \"-- Please fill the right Date --\"\n        }); //msg.message= \"-- Please fill the right Date --\";\n      }\n    } // update all the other data except DateOfBirth\n    else {\n      newFormData[fieldName] = fieldValue;\n      setaddFormData(newFormData);\n      msg.message = \"\";\n    }\n  };\n  /**\n   * It updates the addformData according HealthCardNumber field input\n   **/\n\n\n  const handleCardNumber = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newFormData = { ...addformData\n    };\n    let name = parseInt(fieldValue); // checking if the given value is number \n\n    if (!isNaN(name)) {\n      newFormData[fieldName] = name.toString();\n      setaddFormData(newFormData);\n    } else {\n      newFormData[fieldName] = \"\";\n      setaddFormData(newFormData);\n    } // keep showing this message until the healthCardNumber's length is 10\n\n\n    if (fieldValue.length < 10) {\n      msg.message = \"-- Health Card Number should be 10 Digit long --\";\n    } else {\n      msg.message = \"\";\n    }\n  };\n  /**\n   * It handles the form submit and updates the table with added values\n   */\n\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    let healthCard = addformData.healthCard;\n    let total = 0; // checking if the healthCardNumber is 10 digit long\n\n    if (addformData.healthCard.length === 10) {\n      let checkDigit = parseInt(healthCard[healthCard.length - 1]); // check digit value\n      // going through healthCardNumber and perfoeming mod 10\n\n      for (let i = 0; i < healthCard.length - 1; i++) {\n        // the value that needs to be doubled\n        if (i % 2 === 0) {\n          let addValue = parseInt(healthCard[i]) * 2; // if the number is greater than 9, split it and add it together then add it to the total\n\n          if (addValue > 9) {\n            let string = addValue.toString();\n            let a = parseInt(string[0]);\n            let b = parseInt(string[1]);\n            let add = a + b;\n            total += add;\n          } else {\n            total += addValue;\n          }\n        } // adding even position digits\n        else {\n          total += parseInt(healthCard[i]);\n        }\n      } // checking the check digit is matching with the result and updating table and clearing form\n\n\n      if (checkDigit === 10 - total % 10) {\n        // patient to add to the table\n        const newPatient = {\n          firstName: addformData.firstName,\n          lastName: addformData.lastName,\n          dateOfBirth: addformData.dateOfBirth,\n          healthCard: addformData.healthCard,\n          gender: addformData.gender\n        };\n        const newPatients = [...patientInfo, newPatient];\n        setPatientInfo(newPatients);\n        addformData.firstName = \"\";\n        addformData.lastName = \"\";\n        addformData.dateOfBirth = \"\";\n        addformData.healthCard = \"\";\n        msg.message = \"\";\n      } // if check digit does not match, let the user know\n      else {\n        const newFormData = { ...addformData\n        };\n        newFormData[\"healthCard\"] = \"\";\n        setaddFormData(newFormData);\n        msg.message = \"-- Check Digit does not match. Invalid Health Card Number!!! --\";\n      }\n    } // if healthCardNumber's length is less than 10 then let the user know\n    else {\n      const newFormData = { ...addformData\n      };\n      newFormData[\"healthCard\"] = \"\";\n      setaddFormData(newFormData);\n      msg.message = \"-- Health Card Number is not valid --\";\n    }\n  }; // returning the content of the webpage\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: hospital,\n        id: \"mainImage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hamilton Health Sciences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"COVID-19\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Services\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"News\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"About Us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          id: \"signIn\",\n          children: \"SignIn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"-- The form below is for online registration for a new patient. Feel free take your time and fill the form -- \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fill the Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"addForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg[\"message\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            children: \"First Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"firstName\",\n            name: \"firstName\",\n            maxLength: \"20\",\n            value: addformData[\"firstName\"],\n            onChange: handleForm,\n            required: \"required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            children: \"Last Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"lastName\",\n            name: \"lastName\",\n            maxLength: \"20\",\n            value: addformData[\"lastName\"],\n            onChange: handleForm,\n            required: \"required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dateOfBirth\",\n            children: \"Date of birth:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"dateOfBirth\",\n            value: addformData[\"dateOfBirth\"],\n            onChange: handleForm,\n            required: \"required\",\n            id: \"dateOfBirth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"healthCard\",\n            children: \"Health Card Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"healthCard\",\n            value: addformData[\"healthCard\"],\n            maxLength: \"10\",\n            onChange: handleCardNumber,\n            required: \"required\",\n            id: \"healthCard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"gender\",\n            children: \"Gender:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"gender\",\n            value: addformData[\"gender\"],\n            onChange: handleForm,\n            id: \"gender\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Male\",\n              children: \"Male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Female\",\n              children: \"Female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Patients Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date of birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"HealthCard Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: patientInfo.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: patient.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patient.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patient.dateOfBirth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patient.healthCard\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patient.gender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)]\n          }, patient.firstName, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"footContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"center\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"center\",\n            children: \"New Updates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"center hidden\",\n            children: \"New Covid-19 guidelines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"center\",\n            children: \"Our Work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"center\",\n            children: \"Our Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"center hidden\",\n            children: \"Our Goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n/** <img src=\"https://www.transparentpng.com/thumb/baby-png/the-boss-baby-png-transparent-image-35.png\"/>*/\n\n\n_s(App, \"enEM+hNO+EN3H0UtqtV4auoXwF0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/xampp/htdocs/mystuff/hello-world/src/App.js"],"names":["React","useState","data","hospital","footer2","App","patientInfo","setPatientInfo","addformData","setaddFormData","firstName","lastName","dateOfBirth","healthCard","gender","msg","setMsg","message","handleForm","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormData","date","Date","current","currentTime","getFullYear","getMonth","getDate","handleCardNumber","name","parseInt","isNaN","toString","length","handleFormSubmit","total","checkDigit","i","addValue","string","a","b","add","newPatient","newPatients","map","patient"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\nimport data from \"./data.json\";\nimport hospital from \"./images/hospital.png\";\nimport footer2 from \"./images/footer2.png\";\n//import {css} from \"emotion\";\n\n/**\n * This function is creating webpage(form, table, etc.) and handles the data being entered and displayed\n * \n * @returns The Main Content of the Page\n */\nfunction App() {\n  // to store the data from json file\n  const [patientInfo, setPatientInfo] = useState(data);\n\n  // to store data from form \n  const [addformData, setaddFormData] = useState({\n    firstName: '',\n    lastName: '',\n    dateOfBirth:'',\n    healthCard: '',\n    gender: 'Male'\n  })\n\n  // to use as the warning message\n  const [msg, setMsg] = useState({\n    message:''\n  })\n\n  /** \n   * It updates the addformData according to FirstName, LastName, DateOfBirth and Gender field input\n  */\n  const handleForm = (event) =>{\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newFormData = { ...addformData};\n    // if the entered data is coming from DateOfBirth\n    if(fieldName === \"dateOfBirth\"){\n      let date = new Date(fieldValue);\n      let current = new Date();\n      let currentTime = new Date(current.getFullYear(),current.getMonth(),current.getDate());\n      \n      // checking if the entered date is not a future date\n      if(date < currentTime){\n        newFormData[fieldName] = fieldValue;\n        setaddFormData(newFormData);\n        msg.message= \"\";\n      }\n      else{\n        newFormData[fieldName] = \"\";\n        setaddFormData(newFormData);\n        setMsg({message: \"-- Please fill the right Date --\"});\n        //msg.message= \"-- Please fill the right Date --\";\n      }\n    }\n    // update all the other data except DateOfBirth\n    else{\n      newFormData[fieldName] = fieldValue;\n      setaddFormData(newFormData);\n      msg.message= \"\";\n    }\n  }\n\n  /**\n   * It updates the addformData according HealthCardNumber field input\n   **/\n  const handleCardNumber = (event) =>{\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newFormData = { ...addformData};\n    let name = parseInt(fieldValue);\n\n    // checking if the given value is number \n    if(!isNaN(name)){\n      newFormData[fieldName] = name.toString();\n      setaddFormData(newFormData);\n    }\n    else{\n      newFormData[fieldName] = \"\";\n      setaddFormData(newFormData);\n    }\n\n    // keep showing this message until the healthCardNumber's length is 10\n    if(fieldValue.length < 10){\n      msg.message= \"-- Health Card Number should be 10 Digit long --\";\n    }\n    else{\n      msg.message= \"\";\n    }\n  }\n\n  /**\n   * It handles the form submit and updates the table with added values\n   */\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    let healthCard = addformData.healthCard;\n    let total = 0;\n\n    // checking if the healthCardNumber is 10 digit long\n    if(addformData.healthCard.length === 10){\n      let checkDigit = parseInt(healthCard[healthCard.length-1]);   // check digit value\n\n      // going through healthCardNumber and perfoeming mod 10\n      for(let i = 0; i < healthCard.length - 1; i++){\n        // the value that needs to be doubled\n        if(i % 2 === 0){\n          let addValue = parseInt(healthCard[i]) * 2;\n          // if the number is greater than 9, split it and add it together then add it to the total\n          if(addValue > 9){\n            let string = addValue.toString();\n            let a = parseInt(string[0]);\n            let b = parseInt(string[1]);\n            let add = a+b;\n            total += add;\n          }\n          else{\n            total += addValue;\n          }\n        }\n        // adding even position digits\n        else{\n          total += parseInt(healthCard[i]);\n        }\n      }\n\n      // checking the check digit is matching with the result and updating table and clearing form\n      if(checkDigit === (10 - (total % 10))){\n        // patient to add to the table\n        const newPatient = {\n          firstName: addformData.firstName,\n          lastName: addformData.lastName,\n          dateOfBirth: addformData.dateOfBirth,\n          healthCard: addformData.healthCard,\n          gender: addformData.gender\n        }\n        const newPatients = [...patientInfo, newPatient];\n        setPatientInfo(newPatients);\n\n        addformData.firstName = \"\";\n        addformData.lastName = \"\";\n        addformData.dateOfBirth = \"\";\n        addformData.healthCard = \"\";\n\n        msg.message= \"\";\n      }\n      // if check digit does not match, let the user know\n      else{\n        const newFormData = { ...addformData};\n        newFormData[\"healthCard\"] = \"\";\n        setaddFormData(newFormData);\n        msg.message = \"-- Check Digit does not match. Invalid Health Card Number!!! --\"\n      }\n    }\n    // if healthCardNumber's length is less than 10 then let the user know\n    else{\n      const newFormData = { ...addformData};\n      newFormData[\"healthCard\"] = \"\";\n      setaddFormData(newFormData);\n      msg.message= \"-- Health Card Number is not valid --\";\n    }\n  }\n\n  // returning the content of the webpage\n  return (\n    <div className=\"app-container\">\n      <header>\n        <img src={hospital} id=\"mainImage\"/>\n        <h1>Hamilton Health Sciences</h1>\n        <nav>\n            <a href=\"#\">Home</a>\n            <a href=\"#\">COVID-19</a>\n            <a href=\"#\">Services</a>\n            <a href=\"#\">News</a>\n            <a href=\"#\">About Us</a>\n            <a href=\"#\" id=\"signIn\">SignIn</a>\n        </nav>\n        <p>-- The form below is for online registration for a new patient. Feel free take your time and fill the form -- </p>\n    </header>\n      <h2>Fill the Form</h2>\n      <div id = \"addForm\">\n        <span><p>{msg[\"message\"]}</p></span>\n        <form onSubmit={handleFormSubmit}>\n          <div>\n            <label htmlFor =\"firstName\">First Name:</label>\n            <input type=\"text\" id = \"firstName\" name = \"firstName\" maxLength = \"20\" value = {addformData[\"firstName\"]}  onChange={handleForm} required =\"required\" />\n          </div>\n          \n          <div>\n            <label htmlFor = \"lastName\">Last Name:</label>\n            <input type=\"text\" id =\"lastName\" name = \"lastName\" maxLength = \"20\" value = {addformData[\"lastName\"]}  onChange={handleForm} required =\"required\" />\n          </div>\n         \n          <div>\n          <label htmlFor = \"dateOfBirth\" >Date of birth:</label>\n          <input type=\"date\" name = \"dateOfBirth\" value = {addformData[\"dateOfBirth\"]}   onChange={handleForm} required =\"required\" id =\"dateOfBirth\"/>\n          </div>\n\n          <div>\n            <label htmlFor=\"healthCard\">Health Card Number:</label>\n            <input type=\"text\" name = \"healthCard\" value = {addformData[\"healthCard\"]} maxLength=\"10\" onChange={handleCardNumber} required =\"required\" id =\"healthCard\" />\n          </div>\n\n          <div>\n            <label htmlFor =\"gender\">Gender:</label> \n            <select name = \"gender\" value = {addformData[\"gender\"]}  onChange={handleForm} id =\"gender\">\n              <option value=\"Male\">Male</option>\n              <option value=\"Female\">Female</option>\n              <option value=\"Other\">Other</option>\n            </select>\n          </div>\n          <div id = \"submit\">\n            <input type=\"submit\" value=\"Submit\"/>\n          </div>\n        </form>\n      </div>\n      <h3>Patients Information</h3>\n      <div id =\"table\">\n        <table>\n          <thead>\n            <tr>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>Date of birth</th>\n              <th>HealthCard Number</th>\n              <th>Gender</th>\n            </tr>\n          </thead>\n          <tbody>\n            {patientInfo.map((patient)=>\n            <tr key = {patient.firstName}>\n              <td>{patient.firstName}</td>\n              <td>{patient.lastName}</td>\n              <td>{patient.dateOfBirth}</td>\n              <td>{patient.healthCard}</td>\n              <td>{patient.gender}</td>\n          </tr>\n          )}   \n          </tbody>\n        </table>\n      </div>\n      <footer>\n      <div id =\"footContainer\">\n            <div>\n                <img src = \"\" />\n            </div>\n            <div>\n                <p className=\"center\">Home</p>\n                <p className=\"center\">New Updates</p>\n                <p className=\"center hidden\">New Covid-19 guidelines</p>\n            </div>\n            <div>\n                <p className=\"center\">Our Work</p>\n                <p className=\"center\">Our Network</p>\n                <p className=\"center hidden\">Our Goal</p>\n            </div>\n        </div>\n      </footer>\n    </div>\n    \n  );\n}\n/** <img src=\"https://www.transparentpng.com/thumb/baby-png/the-boss-baby-png-transparent-image-35.png\"/>*/\nexport default App;\n"]},"metadata":{},"sourceType":"module"}